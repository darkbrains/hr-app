name: Build the peopleconnect app, test and deploy

on:
  workflow_dispatch:
    inputs:
      buildBaseImage:
        description: 'Build Base Images? (yes or no)'
        required: true
        default: 'no'
      baseImagePlatform:
        description: 'Platform for Base Images (amd, arm, both)'
        required: false
        default: 'both'
      mainImagePlatform:
        description: 'Platform for Main Images (amd, arm, both)'
        required: true
        default: 'both'

jobs:
  build-base-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [amd64, arm64]
        include:
          - platform: amd64
            dockerfile: Dockerfile.base.amd
          - platform: arm64
            dockerfile: Dockerfile.base.arm
    if: ${{ github.event.inputs.buildBaseImage == 'yes' && (github.event.inputs.baseImagePlatform == 'both' || github.event.inputs.baseImagePlatform == matrix.platform) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Base Image
        run: |
          docker buildx build --platform linux/${{ matrix.platform }} -t darkbrains/python:3.12.3 -f ./docker/${{ matrix.dockerfile }} . --push

  build-main-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [amd64, arm64]
    if: ${{ github.event.inputs.mainImagePlatform == 'both' || github.event.inputs.mainImagePlatform == matrix.platform }}
    needs: build-base-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Main Image
        run: |
          docker buildx build --platform linux/${{ matrix.platform }} -t darkbrains/peopleconnect:${{ github.sha }} -f ./docker/Dockerfile . --push

  edit-image-tag:
    needs: build-main-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: darkbrains/live-environments
          ref: main
          token: ${{ secrets.TOKEN_GITHUB }}

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_KEY }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Deliver to K8S
        run: |
          sed -i "s|docker.io/darkbrains/peopleconnect:[^ ]*|docker.io/darkbrains/peopleconnect:${{ github.sha }}|" ./saas/peopleconnect/values.yaml

      - name: Sign commit and push changes
        run: |
          git add .
          git config --local user.email "blackdocscloud@gmail.com"
          git config --local user.name "darkbrains-bot"
          git commit -m "Update image tag for peopleconnect"
          git push

      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notify_when: "success,failure"
          footer: "<{run_url}|View Run>"
          notification_title: "peopleconnect CI"
          message_format: "{emoji} *{workflow}* {status_message} on <{commit_url}|{commit_sha}>"
          token: ${{ secrets.repo_token }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
